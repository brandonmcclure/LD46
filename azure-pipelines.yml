# PHP as Linux Web App on Azure

# Build, package and deploy your PHP project to Azure Linux Web App.
# Add steps that run tests and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/php

trigger:
- master

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'b4c79679-cfd6-46b3-9939-7364753e44ec'
  
  # Web app name
  webAppName: 'LD46Project'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Environment name
  environmentName: 'prd'

  # Root folder under which your composer.json file is available.
  rootFolder: $(System.DefaultWorkingDirectory)

stages:
- stage: Build
  displayName: Build stage
  variables:
    phpVersion: '7.2.29'
  jobs:
  - job: BuildJob
    pool:
      vmImage: $(vmImageName)
    steps:
    - script: |
        sudo update-alternatives --set php /usr/bin/php$(phpVersion)
        sudo update-alternatives --set phar /usr/bin/phar$(phpVersion)
        sudo update-alternatives --set phpdbg /usr/bin/phpdbg$(phpVersion)
        sudo update-alternatives --set php-cgi /usr/bin/php-cgi$(phpVersion)
        sudo update-alternatives --set phar.phar /usr/bin/phar.phar$(phpVersion)
        php -version
      workingDirectory: $(rootFolder)
      displayName: 'Use PHP version $(phpVersion)'
    
    - script: composer install --no-interaction --prefer-dist
      workingDirectory: $(rootFolder)/src
      displayName: 'Composer install'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(rootFolder)/src'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true
    
    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop

- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job:
    steps:
    - task: DownloadPipelineArtifact@2
      displayName: Download Artifacts
      inputs:
        buildType: 'current'
        artifactName: 'drop'
        targetPath: '$(Pipeline.Workspace)'
  #  - task: AzureRmWebAppDeployment@4
  #    inputs:
  #      ConnectionType: 'AzureRM'
  #      azureSubscription: 'Pay-As-You-Go (8ca5abe6-ced4-456c-b60b-7baf7e8d44eb)'
  #      appType: 'webApp'
  #      WebAppName: 'LD46Project'
  #      deployToSlotOrASE: true
  #      ResourceGroupName: 'LD46Project'
  #      SlotName: 'production'
  #      packageForLinux: "$(Pipeline.Workspace)/**/*.zip"
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Pay-As-You-Go (8ca5abe6-ced4-456c-b60b-7baf7e8d44eb)'
        appType: 'webApp'
        WebAppName: 'ld46win'
        packageForLinux: '$(Pipeline.Workspace)/**/*.zip'